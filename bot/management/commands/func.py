from django.conf import settings
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, Update, ReplyKeyboardMarkup
from telegram.ext import CallbackContext
from bot.models import BotUser
from bot.management.commands.utils import get_BotUser

about_name = "about"
home_name = "home"
products_name = "products"
social_name = "social"
application_name = "application"
group_username = "@nbpplast"
a = """–ö–æ–º–ø–∞–Ω–∏—è ‚öúÔ∏èNew Public Build‚öúÔ∏è- –æ–¥–∏–Ω –∏–∑ –ª–∏–¥–µ—Ä–æ–≤ –æ—Ç—Ä–∞—Å–ª–∏ –ø–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤—É –ø–æ–ª–∏—ç—Ç–∏–ª–µ–Ω–æ–≤—ã—Ö —Ç—Ä—É–±!

‚ùï–ö—Ä–∞—Ç–∫–æ –æ –Ω–∞—Å:

‚ñ™Ô∏è2 –≥–æ–¥–∞ –Ω–∞ —Ä—ã–Ω–∫–µ
‚ñ™Ô∏è–¢—Ä—É–±—ã –∏–∑ –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ —Å—ã—Ä—å—è;
‚ñ™Ô∏è–î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≤—Å–µ–º—É –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω—É;
‚ñ™Ô∏è–†–∞–±–æ—Ç–∞ —Å –ì–æ—Å. –ø—Ä–æ–µ–∫—Ç–∞–º–∏
"""


def start(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    user = get_BotUser(user_id)
    if user:
        if user.is_active:
            keyboard = [
                [
                    InlineKeyboardButton("–û –Ω–∞—Å üõ°", callback_data=about_name),
                    InlineKeyboardButton("–Ω–∞—à–∏ —Å–æ—Ü —Å–µ—Ç–∏ üåê", callback_data=social_name)
                ],
                [
                    InlineKeyboardButton("–∑–∞–∫–∞–∑–∞—Ç—å –ø–æ–ª–∏—Ç–∏–ª–µ–Ω–≤—ã–π–µ —Ç—Ä—É–±—ã üõ†", callback_data=products_name)
                ]
            ]
            update.message.reply_html(
                "–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ npb plast ."
                "–ó–¥–µ—Å—å –í—ã —Å–º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –Ω—É–∂–Ω—É—é –í–∞–º —Ç—Ä—É–±—ã  –∏ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É üë©‚Äçüíª",
                reply_markup=InlineKeyboardMarkup(keyboard)
            )
            return 3
    else:
        BotUser.objects.create(tg_id=user_id)
    update.message.reply_html("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –ø–æ–ª–Ω–æ–µ –∏–º—è")
    return 1


def full_name(update: Update, context: CallbackContext) -> int:
    user_id = update.message.from_user.id
    user = get_BotUser(user_id)
    user.full_name = update.message.text
    user.save()

    reply_markup = ReplyKeyboardMarkup([[KeyboardButton('–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º', request_contact=True)]],
                                       resize_keyboard=True)
    update.message.reply_html("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", reply_markup=reply_markup)
    return 2


def phone_number(update: Update, context: CallbackContext) -> int:
    user_id = update.message.from_user.id
    user = get_BotUser(user_id)
    user.phone = update.message.contact.phone_number
    user.is_active = True
    user.save()
    keyboard = InlineKeyboardMarkup([
        [
            InlineKeyboardButton("–û –Ω–∞—Å üõ°", callback_data=about_name),
            InlineKeyboardButton("–Ω–∞—à–∏ —Å–æ—Ç—å —Å–µ—Ç–∏ üåê", callback_data=social_name)
        ],
        [
            InlineKeyboardButton("–∑–∞–∫–∞–∑–∞—Ç—å –ø–æ–ª–∏—Ç–∏–ª–µ–Ω–≤—ã–π–µ —Ç—Ä—É–±—ã üõ†", callback_data=products_name)
        ]
    ])
    update.message.reply_html(
        "–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ npb plast . –ó–¥–µ—Å—å –í—ã —Å–º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –Ω—É–∂–Ω—É—é –í–∞–º —Ç—Ä—É–±—ã  –∏ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É üë©‚Äçüíª",
        reply_markup=keyboard)
    return 3


def home(update: Update, context: CallbackContext):
    query = update.callback_query
    query.answer()
    query.delete_message()
    keyboard = InlineKeyboardMarkup([
        [
            InlineKeyboardButton("–û –Ω–∞—Å üõ°", callback_data=about_name),
            InlineKeyboardButton("–Ω–∞—à–∏ —Å–æ—Ü —Å–µ—Ç–∏ üåê", callback_data=social_name)
        ],
        [
            InlineKeyboardButton("–∑–∞–∫–∞–∑–∞—Ç—å –ø–æ–ª–∏—Ç–∏–ª–µ–Ω–≤—ã–π–µ —Ç—Ä—É–±—ã üõ†", callback_data=products_name)
        ]
    ])
    query.message.reply_html(
        "–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ npb plast . –ó–¥–µ—Å—å –í—ã —Å–º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –Ω—É–∂–Ω—É—é –í–∞–º —Ç—Ä—É–±—ã  –∏ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É üë©‚Äçüíª",
        reply_markup=keyboard)


def about(update: Update, context: CallbackContext):
    query = update.callback_query
    query.answer()
    query.delete_message()
    keyboard = InlineKeyboardMarkup([[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data=home_name)]])
    query.message.reply_html(a, reply_markup=keyboard)


def products(update: Update, context: CallbackContext):
    query = update.callback_query
    query.answer()
    keyboard = InlineKeyboardMarkup([[
        InlineKeyboardButton("‚ûï –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data=application_name),
        InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data=home_name)
    ]])
    try:
        file = open(str(settings.STATIC_ROOT) + "/nbp.pdf", 'rb')
        query.delete_message()
        query.message.reply_document(document=file, reply_markup=keyboard)
    except FileNotFoundError:
        print(str(settings.STATIC_ROOT))


def social(update: Update, context: CallbackContext):
    query = update.callback_query
    query.answer()
    query.delete_message()
    keyboard = InlineKeyboardMarkup([[
        InlineKeyboardButton("–§–µ–π—Å–±—É–∫", url="https://m.facebook.com/npbplast/"),
        InlineKeyboardButton("–ò–Ω—Å—Ç–∞–≥—Ä–∞–º", url="https://instagram.com/npb_plast?utm_medium=copy_link"),
        InlineKeyboardButton("–¢–µ–ª–µ–≥—Ä–∞–º", callback_data="https://t.me/npb_plast"),
    ],
        [
            InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data=home_name)
        ]
    ])
    query.message.reply_html("–ù–∞—à–∏ —Å–æ—Ü —Å–µ—Ç–∏ üåê", reply_markup=keyboard)


def application(update: Update, context: CallbackContext):
    query = update.callback_query
    query.answer(text=f'–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –∑–∞—è–≤–∫–∏! ‚úÖ', show_alert=True)
    user_id = query.from_user.id
    user = get_BotUser(user_id)
    context.bot.send_message(chat_id=group_username, parse_mode="html",
                             text='<b>{}</b>\n<b>üë§–ò–º—è:</b> {}\n<b>üìû–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b> {} '
                             .format('–ø–æ–ª–∏—Ç–∏–ª–µ–Ω–≤—ã–π–µ —Ç—Ä—É–±—ã üõ†'.title(), user.full_name, user.phone))
